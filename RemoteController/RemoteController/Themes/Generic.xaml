<ResourceDictionary 
    x:Class="RemoteController.Themes.Generic"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ap="clr-namespace:RemoteController.Controls"
    xmlns:controls="clr-namespace:RemoteController.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/RemoteController;component/Resources/Generic/All.xaml" />
        <ResourceDictionary Source="pack://application:,,,/RemoteController;component/Resources/Styles/All.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="{x:Static ap:ResourceKeys+Colors.Background}">#FF2D2D30</Color>
    <Color x:Key="{x:Static ap:ResourceKeys+Colors.Highlight}">#FF3F3F41</Color>
    <Color x:Key="{x:Static ap:ResourceKeys+Colors.Active}">#FF007ACC</Color>
    <Color x:Key="{x:Static ap:ResourceKeys+Colors.Foreground}">#FFF4F4F5</Color>

    <SolidColorBrush x:Key="{x:Static ap:ResourceKeys+Brushes.Background}" Color="{StaticResource {x:Static ap:ResourceKeys+Colors.Background}}"/>
    <SolidColorBrush x:Key="{x:Static ap:ResourceKeys+Brushes.Highlight}" Color="{StaticResource {x:Static ap:ResourceKeys+Colors.Highlight}}"/>
    <SolidColorBrush x:Key="{x:Static ap:ResourceKeys+Brushes.Active}" Color="{StaticResource {x:Static ap:ResourceKeys+Colors.Active}}"/>
    <SolidColorBrush x:Key="{x:Static ap:ResourceKeys+Brushes.Foreground}" Color="{StaticResource {x:Static ap:ResourceKeys+Colors.Foreground}}"/>

    <SolidColorBrush x:Key="StyledWindow.Menu.Colors.Hover" Color="#3E3E40" />
    <SolidColorBrush x:Key="StyledWindow.Menu.Colors.Border" Color="#333337" />
    <SolidColorBrush x:Key="StyledWindow.Menu.Colors.Background" Color="{StaticResource {x:Static ap:ResourceKeys+Colors.Background}}" />

    <SolidColorBrush x:Key="{x:Static ap:ResourceKeys.TitleBackgroundKey}" Color="{StaticResource {x:Static ap:ResourceKeys+Colors.Background}}" />

    <Style x:Key="StyledWindow.Menu" TargetType="Menu">
        <Setter Property="IsMainMenu" Value="True" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel
                        IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Separator" x:Key="{x:Static MenuItem.SeparatorStyleKey}" BasedOn="{StaticResource Separator.Vertical}">
                <Setter Property="Height" Value="14" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="4 0" />
                <Setter Property="Background" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
            </Style>
            <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItem.Default}" />
        </Style.Resources>
    </Style>

    <Style TargetType="ap:StyledWindow">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static ap:ResourceKeys+Brushes.Foreground}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static ap:ResourceKeys+Brushes.Background}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static ap:ResourceKeys+Brushes.Background}}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Font.Family.Default}" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Padding" Value="7" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ap:StyledWindow">
                    <Border
                        x:Name="WindowBorder" 
                        Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}" 
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                                <AdornerDecorator>
                                    <Grid x:Name="LayoutRoot">
                                        <Grid.RowDefinitions>
                                            <RowDefinition MinHeight="25" Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="15" />
                                        </Grid.RowDefinitions>

                                        <ContentPresenter 
                                            Grid.Row="1" 
                                            Grid.RowSpan="2" 
                                            Margin="{TemplateBinding Padding}"/>

                                        <Rectangle 
                                            x:Name="HeaderBackground"
                                            SizeChanged="HeaderBackground_OnSizeChanged"
                                            Grid.Row="0"
                                            MinHeight="25" 
                                            Fill="{DynamicResource {x:Static ap:ResourceKeys.TitleBackgroundKey}}" />

                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <Border 
                                                x:Name="IconContainer"
                                                Background="Transparent"
                                                Grid.Column="0"
                                                Padding="5 1 0 0">
                                                <Image 
                                                   x:Name="Icon"
                                                   Height="24"
                                                   Width="24"
                                                   VerticalAlignment="Top"
                                                   Stretch="Uniform"
                                                   Source="{TemplateBinding Icon}"/>
                                            </Border>
                                            <Grid Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <!--Title + Menu + Left Content-->
                                                    <ColumnDefinition Width="*" />
                                                    <!--Right content-->
                                                    <ColumnDefinition Width="Auto" MinWidth="0" />
                                                </Grid.ColumnDefinitions>

                                                <WrapPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Top"
                                                           Margin="4 0 2 0">
                                                    <WrapPanel.Resources>
                                                        <Style TargetType="Button" BasedOn="{StaticResource ApplicationButton}" />
                                                    </WrapPanel.Resources>
                                                    <TextBlock 
                                                        x:Name="WindowTitleTextBlock" 
                                                        Text="{TemplateBinding Title}"
                                                        FontFamily="{DynamicResource Font.Family.Default}"
                                                        HorizontalAlignment="Left" 
                                                        TextTrimming="CharacterEllipsis" 
                                                        VerticalAlignment="Center"  
                                                        Margin="4 3 0 3"  
                                                        FontSize="14"
                                                        SnapsToDevicePixels="True"
                                                        Foreground="{TemplateBinding Foreground}"/>

                                                    <ContentPresenter
                                                        x:Name="contentHeaderMenu"
                                                        WindowChrome.IsHitTestVisibleInChrome="True"
                                                        Content="{TemplateBinding HeaderMenu}" />
                                                    <ContentPresenter
                                                        x:Name="contentHeaderLeft"
                                                        WindowChrome.IsHitTestVisibleInChrome="True"
                                                        Content="{TemplateBinding HeaderLeftContent}" />
                                                </WrapPanel>
                                                <ContentPresenter
                                                    Grid.Column="1"
                                                    x:Name="contentHeaderRight"
                                                    WindowChrome.IsHitTestVisibleInChrome="True"
                                                    VerticalAlignment="Stretch"
                                                    Margin="2 0 2 0"
                                                    Content="{TemplateBinding HeaderRightContent}" />
                                            </Grid>

                                            <StackPanel 
                                                Grid.Column="2"
                                                Orientation="Horizontal" 
                                                HorizontalAlignment="Right" 
                                                VerticalAlignment="Top" 
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                                <Button Style="{StaticResource ApplicationButton.Minimize}" />
                                                <Button x:Name="Restore" Style="{StaticResource ApplicationButton.Restore}" />
                                                <Button x:Name="Maximize" Style="{StaticResource ApplicationButton.Maximize}" />
                                                <Button Style="{StaticResource ApplicationButton.Close}"/>
                                            </StackPanel>
                                        </Grid>

                                        <Path 
                                            x:Name="ResizeGrip" 
                                            Grid.Row="2"
                                            Visibility="Collapsed" 
                                            Width="12"
                                            Height="12" 
                                            Margin="1"
                                            HorizontalAlignment="Right"
                                            Stroke="{DynamicResource {x:Static ap:ResourceKeys+Brushes.Active}}" 
                                            StrokeThickness="1"
                                            Stretch="None" 
                                            Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                                    </Grid>
                                </AdornerDecorator>
                            </Border>
                            <Border 
                                BorderBrush="{DynamicResource {x:Static ap:ResourceKeys+Brushes.Active}}"
                                BorderThickness="1" 
                                SnapsToDevicePixels="True"
                                Visibility="{Binding IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Converter.BooleanToVisibility}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="ShowTitle" Value="False">
                            <Setter TargetName="WindowTitleTextBlock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HeaderMenu" Value="{x:Null}">
                            <Setter TargetName="contentHeaderMenu" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HeaderLeftContent" Value="{x:Null}">
                            <Setter TargetName="contentHeaderLeft" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HeaderRightContent" Value="{x:Null}">
                            <Setter TargetName="contentHeaderRight" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconContainer" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                    <ControlTemplate.Resources>
                        <Style TargetType="Menu" BasedOn="{StaticResource StyledWindow.Menu}" />
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome 
                    CornerRadius="0" 
                    GlassFrameThickness="1" 
                    UseAeroCaptionButtons="False"
                    />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>